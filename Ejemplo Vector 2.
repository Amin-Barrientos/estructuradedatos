//Vector.h

#define MAX 10
class Vector

{
	private:
		int vec[MAX];
		int n;
	public:
		Vector();
		~Vector();
		void set_n(int _n);
		int get_n();

		void cargarVector(int _n, int _vec[]);
		int mostrarVector(int _vec[]);
		void ordenarVector(int _vec[], int _vec2[]);
		int promedio(int _vec[], int _n);

};

//Vector.cpp

#include "Vector.h"
#include <iostream>
using namespace std;
Vector::Vector()
{

}
Vector::~Vector() 
{

}
void Vector::set_n(int _n)
{
	//Da valor al atributo n o Setea
	n = _n;
}
int Vector::get_n()
{
	//Devolver el valor del atributo n
	return n;
}

void Vector::cargarVector(int _n, int _vec[])
{
	//Equivale a setear el vector, dar valor al vector
	//Los arreglos funcionan por referencia no necesitan &
	for (int i = 0; i < n; i++)
	{
		cout << "Vec[ " << i << "]=";
			cin >> _vec[i];
	}
}
int Vector::mostrarVector(int _vec[])
{
	for (int i = 0; i < n; i++)
	{
		cout << "_Vector: [" << i << "]=" << _vec[i] << endl;
		return 0;
	}
}
void Vector::ordenarVector(int _vec[], int _vec2[]) {

		int aux;
		for (int i = 0; i < n - 1; i++)
		{
			_vec2[i] = _vec[i];

			for (int j = i; j < n; j++)
			{
				if (_vec[i] > _vec[j])
				{
					aux = _vec[i];
					_vec[i] = _vec[i];
					_vec[j] = aux;
				}
			}
		}
	}

int Vector::promedio (int _vec[], int _n)
{
	int prom, aux = 0; //aux es el acumulador de suma
	for (int i = 0; i < _n; i++)
		aux = aux + _vec[i];
	prom = aux / _n;
	return prom;
}

//Vector (main)

#include <iostream>
#include "Vector.h"
#define MAX 100
using namespace std;


int main()
{
    int tamanio, v[MAX];
    Vector vector1;//Declarar un objeto, o instancia de la clase
    cout << "Ingresar el numero de elementos: ";
    do {
        cin >> tamanio;
    } while (tamanio > MAX or tamanio < 0);
    vector1.set_n(tamanio);
    vector1.cargarVector(tamanio, v);
    vector1.mostrarVector(v);
    
}

