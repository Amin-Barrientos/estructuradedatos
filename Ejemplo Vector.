//Vector.h

class Vector
{
private:
	int vec[10], n;
public:
	Vector(void); //constructor
	~Vector(void); //destructor

	void set_n(int _n);
	int get_n();

	void cargarVector(int vec[], int n); 
	void mostrarVector(int vec[], int n); 
	void ordenarVector(int vec[], int n); 
};

//Vector.cpp

#include "Vector.h"
#include <iostream>
using namespace std;
Vector::Vector(void)
{
	vec[10] = 0;
	n = 0;
}


Vector::~Vector(void)
{
}
void Vector::set_n(int _n) {
	n = _n;
}
int Vector::get_n() {
	return n;
}
void Vector::cargarVector(int vec[], int n) {
	for (int i = 0; i < n; i++) {
		cout << "vec[" << i << "] =";
		cin >> vec[i];
	}
}

void Vector::mostrarVector(int vec[], int n) {
	for (int i = 0; i < n; i++) {
		cout << vec[i] << ", ";
	}
	cout << endl;
}

void Vector::ordenarVector(int vec[], int n) {
	int aux;
	for (int i = 0; i < (n - 1); i++) {
		for (int j = i; j < n; j++) {
			if (vec[i] > vec[j]) {
				aux = vec[i];
				vec[i] = vec[j];
				vec[j] = aux;
			}
		}
	}
}

//Ejemplo Vector.cpp (main)

#include <iostream>
#include "Vector.h"
#define MAX 10

using namespace std;
int main()

{
	int vec[MAX], n, op;
	Vector vecito1; //declara una instancia del vector o un objeto 
	//validando la entrada
	cout << "Ingrese el numero de elementos <10: ";
	do {
		cin >> n;
	} while (n <= 0);
	//desplegando menu
	do {
		cout << "-----       M E N U        -----" << endl;
		cout << "|1.- Cargar Vector.            |" << endl;
		cout << "|2.- Mostrar Vector.           |" << endl;
		cout << "|3.- Ordenar Vector.           |" << endl;
		cout << "|0.- Salir                     |" << endl;
		cout << "--------------------------------" << endl;
		cout << " Elija una opcion" << endl;
		cin >> op;
		switch (op) {
		case 1:
			vecito1.cargarVector(vec, n);  //Llamar al metodo
			break;
		case 2:
			vecito1.mostrarVector(vec, n);
			break;
		case 3:
			vecito1.ordenarVector(vec, n);
			break;
		case 0:
			cout << "Salir" << endl;
			break;
		default:
			cout << "Error: Opcion no valida..." << endl;
			break;
		}
	} while (op != 0);
}
